<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AzureADloginfailed" xml:space="preserve">
    <value>Azure AD login failed</value>
  </data>
  <data name="AzureADloginsuccessful" xml:space="preserve">
    <value>Azure AD login successful</value>
  </data>
  <data name="AzureWebApp" xml:space="preserve">
    <value>Azure Web App</value>
  </data>
  <data name="AzureWebAppMenuOption" xml:space="preserve">
    <value> Z: Install a certificate for an Azure Web App.</value>
  </data>
  <data name="Certificateinstallationfailed" xml:space="preserve">
    <value>Certificate installation failed</value>
  </data>
  <data name="EntertheAzuresubscriptionID" xml:space="preserve">
    <value>Enter the Azure subscription ID</value>
  </data>
  <data name="EntertheAzurewebappID" xml:space="preserve">
    <value>Enter the Azure web app ID</value>
  </data>
  <data name="SanCertificatesarenotsupportedbytheAzureWebAppPlugin" xml:space="preserve">
    <value>San Certificates are not supported by the Azure Web App Plugin.</value>
  </data>
  <data name="Selectthehostnamesforthecertificate" xml:space="preserve">
    <value>Select the host names for the certificate
You can enter multiple IDs comma-separated e.g. 1,2,3</value>
  </data>
  <data name="SSLBindingfailed" xml:space="preserve">
    <value>SSL Binding failed</value>
  </data>
  <data name="Configfileisincompleteordoesnotexist" xml:space="preserve">
    <value>Config file is incomplete or does not exist.</value>
  </data>
  <data name="EnterSitePath" xml:space="preserve">
    <value>Enter a site path (the web root of the host where files will be uploaded for http authentication)</value>
  </data>
  <data name="EntertheFTPpassword" xml:space="preserve">
    <value>Enter the FTP password: </value>
  </data>
  <data name="EntertheFTPusername" xml:space="preserve">
    <value>Enter the FTP username: </value>
  </data>
  <data name="Example" xml:space="preserve">
    <value>Example</value>
  </data>
  <data name="FTP" xml:space="preserve">
    <value>FTP</value>
  </data>
  <data name="AddingcentralSSLbinding" xml:space="preserve">
    <value>Adding central SSL binding</value>
  </data>
  <data name="Addingcertificatetostore" xml:space="preserve">
    <value>Adding certificate to store</value>
  </data>
  <data name="AddingSSLbinding" xml:space="preserve">
    <value>Adding SSL binding</value>
  </data>
  <data name="Additionalfilesexistinfolderpath" xml:space="preserve">
    <value>Additional files exist in {folderPath} not deleting.</value>
  </data>
  <data name="Allhostsunderallsitesneedtopassauthorizationbeforeyoucancontinue" xml:space="preserve">
    <value>All hosts under all sites need to pass authorization before you can continue.</value>
  </data>
  <data name="AnswerfileshouldnowbeavailableatanswerUri" xml:space="preserve">
    <value>Answer file should now be available at {answerUri}</value>
  </data>
  <data name="Anunhandledexceptionoccurred" xml:space="preserve">
    <value>An unhandled exception occurred: {@e}</value>
  </data>
  <data name="Associationofthecertificatefailed" xml:space="preserve">
    <value>Association of the certificate failed</value>
  </data>
  <data name="AuthorizationFailedStatus" xml:space="preserve">
    <value>Authorization failed: {Status}</value>
  </data>
  <data name="AuthorizationResultStatus" xml:space="preserve">
    <value>Authorization result: {Status}</value>
  </data>
  <data name="Authorizingidentifierusingchallengetype" xml:space="preserve">
    <value>Authorizing identifier {dnsIdentifier} using challenge type {CHALLENGE_TYPE_HTTP}</value>
  </data>
  <data name="Cannotfindthepath" xml:space="preserve">
    <value>Cannot find the path: {0}</value>
  </data>
  <data name="CentralizedSSLisonlysupportedonIIS8orgreater" xml:space="preserve">
    <value>Centralized SSL is only supported on IIS 8 or greater.</value>
  </data>
  <data name="CentralSSLExistingBindingWithSNI" xml:space="preserve">
    <value>You specified central SSL and there is an existing binding using central SSL with SNI, so there is nothing to update for this binding.</value>
  </data>
  <data name="Checkinabrowsertoseetheanswerfile" xml:space="preserve">
    <value>
Check in a browser to see if the answer file is being served correctly. If it is, also check the DNSSEC configuration.</value>
  </data>
  <data name="Choosefromoneofthemenuoptionsabove" xml:space="preserve">
    <value>Choose from one of the menu options above: </value>
  </data>
  <data name="Closingcertificatestore" xml:space="preserve">
    <value>Closing certificate store</value>
  </data>
  <data name="CommittingbindingchangestoIIS" xml:space="preserve">
    <value>Committing binding changes to IIS</value>
  </data>
  <data name="Creatingregistration" xml:space="preserve">
    <value>Creating registration</value>
  </data>
  <data name="DeleteStatusDescription" xml:space="preserve">
    <value>Delete Status {StatusDescription}</value>
  </data>
  <data name="Deletinganswer" xml:space="preserve">
    <value>Deleting answer</value>
  </data>
  <data name="Deletingfolderpath" xml:space="preserve">
    <value>Deleting {folderPath}</value>
  </data>
  <data name="Deletingwebconfig" xml:space="preserve">
    <value>Deleting web.config</value>
  </data>
  <data name="DoyouagreetoTosLinkUri" xml:space="preserve">
    <value>Do you agree to {0}?</value>
  </data>
  <data name="Doyouwanttoautomaticallyrenewthiscertificate" xml:space="preserve">
    <value>Do you want to automatically renew this certificate in {0} days? This will add a task scheduler task.</value>
  </data>
  <data name="DoyouwanttoinstallthecertificateintotheCertificateStore" xml:space="preserve">
    <value>Do you want to install the certificate into the Certificate Store / Central SSL Store?</value>
  </data>
  <data name="DoyouwanttoupdatethecertificateinIIS" xml:space="preserve">
    <value>Do you want to add/update the certificate in IIS?</value>
  </data>
  <data name="EnterallsiteIDsseparatedbycommas" xml:space="preserve">
    <value>Enter all site IDs separated by commas: </value>
  </data>
  <data name="Enteranemailaddressnotpublicusedforrenewalfailnotices" xml:space="preserve">
    <value>Enter an email address (not public, used for renewal fail notices): </value>
  </data>
  <data name="EnterasitepathforWebDAVauthentication" xml:space="preserve">
    <value>Enter a site path for WebDAV authentication</value>
  </data>
  <data name="Enterthesitehostname" xml:space="preserve">
    <value>Enter the site host name: </value>
  </data>
  <data name="EntertheWebDAVpassword" xml:space="preserve">
    <value>Enter the WebDAV password: </value>
  </data>
  <data name="EntertheWebDAVusername" xml:space="preserve">
    <value>Enter the WebDAV username: </value>
  </data>
  <data name="ErrorcreatingFTPdirectory" xml:space="preserve">
    <value>Error creating FTP directory {@ex}</value>
  </data>
  <data name="Errordeletingfileorfolder" xml:space="preserve">
    <value>Error deleting file/folder {@ex}</value>
  </data>
  <data name="Errorencounteredwhileopeningcertificatestore" xml:space="preserve">
    <value>Error encountered while opening certificate store. Error: {@ex}</value>
  </data>
  <data name="Errorexportingarchive" xml:space="preserve">
    <value>Error exporting archive {@ex}</value>
  </data>
  <data name="Erroroccuredwhiledeletingfolderstructure" xml:space="preserve">
    <value>Error occured while deleting folder structure. Error: {@ex}</value>
  </data>
  <data name="ErrorreadingtheIISversion" xml:space="preserve">
    <value>Error reading the IIS version</value>
  </data>
  <data name="Errorremovingcertificate" xml:space="preserve">
    <value>Error removing certificate {@ex}</value>
  </data>
  <data name="Errorsavingcertificate" xml:space="preserve">
    <value>Error saving certificate {@ex}</value>
  </data>
  <data name="Errorsettingbinding" xml:space="preserve">
    <value>Error setting binding {@ex}</value>
  </data>
  <data name="Errorwarmingupsite" xml:space="preserve">
    <value>Error warming up site: {@ex}</value>
  </data>
  <data name="FTPMenuOption" xml:space="preserve">
    <value> F: Generate a certificate via FTP/FTPS and install it manually.</value>
  </data>
  <data name="FullErrorDetailsauthzState" xml:space="preserve">
    <value>Full error details {@authzState}</value>
  </data>
  <data name="GetcertificatesforallhostsMenu" xml:space="preserve">
    <value> A: Get certificates for all hosts</value>
  </data>
  <data name="GettingACMEserverdirectory" xml:space="preserve">
    <value>Getting ACME server directory</value>
  </data>
  <data name="Host" xml:space="preserve">
    <value>Host: {0}</value>
  </data>
  <data name="HTTPSbindingnotcreatedduetoHTTPbindinghavingspecificIP" xml:space="preserve">
    <value>HTTPS Binding not created due to HTTP binding having specific IP; Manually create the HTTPS binding and retry</value>
  </data>
  <data name="IIS" xml:space="preserve">
    <value>IIS</value>
  </data>
  <data name="IISAuthorizeFailedMessage" xml:space="preserve">
    <value>Authorize failed: This could be caused by IIS not being setup to handle extensionless static files.Here's how to fix that:
  1.In IIS manager goto Site/ Server-&gt;Handler Mappings-&gt;View Ordered List
  2.Move the StaticFile mapping above the ExtensionlessUrlHandler mappings. (like this http://i.stack.imgur.com/nkvrL.png)
  3.If you need to make changes to your web.config file, update the one at Web_Config.xml</value>
  </data>
  <data name="IISCertificateTakesEffectAfterAppPoolRecycle" xml:space="preserve">
    <value>IIS will serve the new certificate after the application pool idle timeout has expired or the app pool is recycled.</value>
  </data>
  <data name="IISMenuOption" xml:space="preserve">
    <value> I: Install certificates for the local IIS</value>
  </data>
  <data name="IISSiteServer" xml:space="preserve">
    <value>IIS Site Server</value>
  </data>
  <data name="IISSiteServerMenuOption" xml:space="preserve">
    <value> S: Generate a single San certificate for multiple sites.</value>
  </data>
  <data name="IISSiteServerMenuOption2" xml:space="preserve">
    <value> S: for all sites on the server</value>
  </data>
  <data name="IISVersionnotfoundinwindowsregistry" xml:space="preserve">
    <value>IIS Version not found in windows registry. Skipping scan.</value>
  </data>
  <data name="Installationofthecertificatefailed" xml:space="preserve">
    <value>Installation of the certificate failed</value>
  </data>
  <data name="InstallingcentralSSLcertificate" xml:space="preserve">
    <value>Installing central SSL certificate</value>
  </data>
  <data name="InstallingSSLcertificateinIIS" xml:space="preserve">
    <value>Installing SSL certificate in IIS</value>
  </data>
  <data name="InstallingSSLcertificateinthecertificatestore" xml:space="preserve">
    <value>Installing SSL certificate in the certificate store</value>
  </data>
  <data name="LoadingregistrationfromregistrationPath" xml:space="preserve">
    <value>Loading registration from {registrationPath}</value>
  </data>
  <data name="LoadingSignerfromsignerPath" xml:space="preserve">
    <value>Loading Signer from {signerPath}</value>
  </data>
  <data name="Manual" xml:space="preserve">
    <value>Manual</value>
  </data>
  <data name="ManualMenuOption" xml:space="preserve">
    <value> M: Generate a certificate manually.</value>
  </data>
  <data name="NA" xml:space="preserve">
    <value>N/A</value>
  </data>
  <data name="NamehastoomanyhostsforaSancertificate" xml:space="preserve">
    <value>{Name} has too many hosts for a San certificate. Let's Encrypt currently has a maximum of 100 alternative names per certificate.</value>
  </data>
  <data name="NoHTTPbindingforhostonsitename" xml:space="preserve">
    <value>No HTTP binding for {host} on {name}</value>
  </data>
  <data name="NoIISbindingswithhostnameswerefound" xml:space="preserve">
    <value>No IIS bindings with host names were found. Please add one using IIS Manager. A host name and site path are required to verify domain ownership.</value>
  </data>
  <data name="Openedcertificatestore" xml:space="preserve">
    <value>Opened certificate store {Name}</value>
  </data>
  <data name="OtherwisemanuallycreatetheHTTPSbinding" xml:space="preserve">
    <value>Otherwise, manually create the HTTPS binding and rerun the application.</value>
  </data>
  <data name="PressYtocontinueoranyotherkeytostopinstalling" xml:space="preserve">
    <value>Press Y to continue. Press any other key to stop installing the certificate: </value>
  </data>
  <data name="Proxyingvia" xml:space="preserve">
    <value>Proxying via {0}</value>
  </data>
  <data name="QuitMenu" xml:space="preserve">
    <value> Q: Quit</value>
  </data>
  <data name="Refreshingauthorization" xml:space="preserve">
    <value>Refreshing authorization</value>
  </data>
  <data name="Removingcertificatefromstore" xml:space="preserve">
    <value>Removing certificate from store {@cert}</value>
  </data>
  <data name="Renewafter" xml:space="preserve">
    <value>Renew after</value>
  </data>
  <data name="RequestFailedStatusCode" xml:space="preserve">
    <value>Request failed: status = {0}</value>
  </data>
  <data name="Requestingcertificate" xml:space="preserve">
    <value>Requesting certificate</value>
  </data>
  <data name="RequestStatusCode" xml:space="preserve">
    <value>Request Status: {StatusCode}</value>
  </data>
  <data name="RSAKeyBitslessthan1024Warning" xml:space="preserve">
    <value>RSA Key Bits less than 1024 is not secure. Letting ACMESharp default key bits. http://openssl.org/docs/manmaster/crypto/RSA_generate_key_ex.html</value>
  </data>
  <data name="RunningScript" xml:space="preserve">
    <value>Running {Script}</value>
  </data>
  <data name="RunningScriptwithparameters" xml:space="preserve">
    <value>Running {Script} with {parameters}</value>
  </data>
  <data name="RuntheapplicationwithsantogenerateaSancertificate" xml:space="preserve">
    <value>Run the application with --san to generate a San certificate</value>
  </data>
  <data name="Savingcertificatetofile" xml:space="preserve">
    <value>Saving certificate to {file}</value>
  </data>
  <data name="Savingissuercertificatetofile" xml:space="preserve">
    <value>Saving issuer certificate to {file}</value>
  </data>
  <data name="Savingregistration" xml:space="preserve">
    <value>Saving registration</value>
  </data>
  <data name="Savingsigner" xml:space="preserve">
    <value>Saving signer</value>
  </data>
  <data name="ScanningIISsitebindingsforhosts" xml:space="preserve">
    <value>Scanning IIS site bindings for hosts</value>
  </data>
  <data name="ScanningIISsites" xml:space="preserve">
    <value>Scanning IIS sites</value>
  </data>
  <data name="Seelinkformoreinformation" xml:space="preserve">
    <value>See {0} for more information.</value>
  </data>
  <data name="Setprivatekeyexportable" xml:space="preserve">
    <value>Set private key exportable</value>
  </data>
  <data name="Submittinganswer" xml:space="preserve">
    <value>Submitting answer</value>
  </data>
  <data name="TheACMEserverwasprobablyunabletoreachanswerUri" xml:space="preserve">
    <value>The ACME server was probably unable to reach {answerUri}</value>
  </data>
  <data name="TheFTPCredentialsarenotset" xml:space="preserve">
    <value>The FTP Credentials are not set. Please specify them and try again.</value>
  </data>
  <data name="TheHTTPbindingisIPspecific" xml:space="preserve">
    <value>The HTTP binding is IP specific; the app can create it. However, if you have other HTTPS sites they will all get an invalid certificate error until you manually edit one of their HTTPS bindings.</value>
  </data>
  <data name="TheWebDAVcredentialsarenotset" xml:space="preserve">
    <value>The WebDAV credentials are not set. Please specify them and try again.</value>
  </data>
  <data name="UnabletofindIISsiteID" xml:space="preserve">
    <value>Unable to find IIS site ID #{0}</value>
  </data>
  <data name="UnabletosetRSAKeyBits" xml:space="preserve">
    <value>Unable to set RSA Key Bits, Letting ACMESharp default key bits, Error: {@ex}</value>
  </data>
  <data name="UpdatingexistingSSLbinding" xml:space="preserve">
    <value>Updating existing SSL binding</value>
  </data>
  <data name="Updatingregistration" xml:space="preserve">
    <value>Updating registration</value>
  </data>
  <data name="UploadStatusDescription" xml:space="preserve">
    <value>Upload Status {StatusDescription}</value>
  </data>
  <data name="UsingSSL" xml:space="preserve">
    <value>Using SSL</value>
  </data>
  <data name="Waitingforsitetowarmup" xml:space="preserve">
    <value>Waiting for site to warm up...</value>
  </data>
  <data name="WarningcreatingSSLbindingforhost" xml:space="preserve">
    <value>Warning creating SSL binding for {0}.</value>
  </data>
  <data name="WebDAV" xml:space="preserve">
    <value>WebDAV</value>
  </data>
  <data name="WebDAVMenuOption" xml:space="preserve">
    <value> W: Generate a certificate via WebDAV and install it manually.</value>
  </data>
  <data name="WritingchallengeanswertoanswerPath" xml:space="preserve">
    <value>Writing challenge answer to {answerPath}</value>
  </data>
  <data name="WritingWebConfig" xml:space="preserve">
    <value>Writing web.config to add extensionless mime type to {webConfigPath}</value>
  </data>
  <data name="YoucanfindthecertificateatpfxFilename" xml:space="preserve">
    <value>You can find the certificate at {pfxFilename}</value>
  </data>
  <data name="YouhavetoomanyhostsforaSancertificate" xml:space="preserve">
    <value>You have too many hosts for a San certificate. Let's Encrypt currently has a maximum of 100 alternative names per certificate.</value>
  </data>
  <data name="YouneedtoeditthebindingturnoffSNI" xml:space="preserve">
    <value>You need to edit the binding, turn off SNI, click OK, edit it again, enable SNI and click OK. That should fix the error.</value>
  </data>
  <data name="Enterhostname" xml:space="preserve">
    <value>Enter a host name: </value>
  </data>
  <data name="Thisprogrammustberunfromanadministrativecommandprompt" xml:space="preserve">
    <value>This program must be run from an administrative command prompt.</value>
  </data>
  <data name="YouenteredtoomanyhostsforaSancertificate" xml:space="preserve">
    <value>You entered too many hosts for a San certificate. Let's Encrypt currently has a maximum of 100 alternative names per certificate.</value>
  </data>
  <data name="Enterallalternativenamesseparatedbycommas" xml:space="preserve">
    <value>Enter all alternative names separated by commas: </value>
  </data>
  <data name="Failedtoparsecommandline" xml:space="preserve">
    <value>Failed to parse commandline</value>
  </data>
  <data name="ACMEServerBaseUri" xml:space="preserve">
    <value>ACME Server: {BaseUri}</value>
  </data>
  <data name="Certificatedirectorycouldnotbecreated" xml:space="preserve">
    <value>Certificate directory could not be created.</value>
  </data>
  <data name="Certificatefolder" xml:space="preserve">
    <value>Certificate folder: {CertOutPath}</value>
  </data>
  <data name="Certificatestore" xml:space="preserve">
    <value>Certificate store: {CertificateStore}</value>
  </data>
  <data name="Configpath" xml:space="preserve">
    <value>Config path: {ConfigPath}</value>
  </data>
  <data name="Errorcreatingthecertificatedirectory" xml:space="preserve">
    <value>Error creating the certificate directory, {CertOutPath}. {@ex}</value>
  </data>
  <data name="Invalidcommandlineoptions" xml:space="preserve">
    <value>Invalid command line options</value>
  </data>
  <data name="Nopluginsupplied" xml:space="preserve">
    <value>No plugin supplied</value>
  </data>
  <data name="PromptYesNo" xml:space="preserve">
    <value> (y/n)</value>
  </data>
  <data name="Renewalperiod" xml:space="preserve">
    <value>Renewal period: {RenewalPeriod}</value>
  </data>
  <data name="SanOptionEnabled" xml:space="preserve">
    <value>San Option Enabled: Running per site and not per host</value>
  </data>
  <data name="UsingcentralizedSSLpath" xml:space="preserve">
    <value>Using centralized SSL path: {CentralSslStore}</value>
  </data>
  <data name="Addingrenewalfortarget" xml:space="preserve">
    <value>Adding renewal for {target}</value>
  </data>
  <data name="CheckforrenewalofACMEcertificates" xml:space="preserve">
    <value>Check for renewal of ACME certificates.</value>
  </data>
  <data name="CreatingtaskNamewithWindowsTaskScheduler" xml:space="preserve">
    <value>Creating task {taskName} with Windows Task Scheduler at 9am every day.</value>
  </data>
  <data name="Creatingtasktorunascurrentuseronlywhentheuserisloggedon" xml:space="preserve">
    <value>Creating task to run as current user only when the user is logged on</value>
  </data>
  <data name="DeletingexistingtaskNamefromWindowsTaskScheduler" xml:space="preserve">
    <value>Deleting existing task {taskName} from Windows Task Scheduler.</value>
  </data>
  <data name="DoyouwanttoreplacetheexistingtaskName" xml:space="preserve">
    <value>Do you want to replace the existing {0} task?</value>
  </data>
  <data name="Doyouwanttospecifytheuserthetaskwillrunas" xml:space="preserve">
    <value>Do you want to specify the user the task will run as?</value>
  </data>
  <data name="Entertheusername" xml:space="preserve">
    <value>Enter the username (Domain\\username): </value>
  </data>
  <data name="Entertheuserspassword" xml:space="preserve">
    <value>Enter the user's password: </value>
  </data>
  <data name="Removingexistingscheduledrenewal" xml:space="preserve">
    <value>Removing existing scheduled renewal {existing}</value>
  </data>
  <data name="Renewalscheduledresult" xml:space="preserve">
    <value>Renewal scheduled {result}</value>
  </data>
  <data name="CertificatecreationfailedFilenotfound" xml:space="preserve">
    <value>Certificate creation failed.  File not found: {pfxFilename}</value>
  </data>
  <data name="Nositeswereselected" xml:space="preserve">
    <value>No sites were selected</value>
  </data>
  <data name="Uploadedfilesmaynotbecleanedup" xml:space="preserve">
    <value>Uploaded files may not have been removed.</value>
  </data>
  <data name="YoucanentermultipleIDscommaseparated" xml:space="preserve">
    <value>You can enter multiple IDs comma-separated e.g. 1,2,3</value>
  </data>
</root>